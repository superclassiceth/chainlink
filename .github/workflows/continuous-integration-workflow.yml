name: Continuous Integration Workflow

on: [push]

env:
  CACHE_VERSION: 9c3bfa173ea0aca1f9939f8896feb4a5

jobs:
  core:
    name: Core Tests
    runs-on: self-hosted
    container: smartcontract/builder:1.0.34
    env:
      DATABASE_URL: postgres://chainlink@postgres:5432/chainlink_test?sslmode=disable
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
          # Set health checks to wait until postgres has started
          # --health-cmd pg_isready
          # --health-interval 10s
          #          --health-timeout 5s
          #          --health-retries 5
        options: >-
          --volume ${{env.GITHUB_WORKSPACE}}/.github/workflows/postgres-init:/docker-entrypoint-initdb.d
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Cache Go vendor packages
        uses: actions/cache@v1
        with:
          path: /go/pkg/mod
          key: go-mod-${{ env.CACHE_VERSION }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ env.CACHE_VERSION }}
      - name: Download Go vendor packages
        run: go mod download
      - name: Set up Yarn for Contracts
        run: yarn setup:contracts
      - name: Setup DB
        run: go run ./core local db preparetest
      - name: Run tests
        run: go test -v -p 6 -parallel 4 ./...

  rust:
    name: Rust
    runs-on: ubuntu-latest
    container:
      image: smartcontract/builder:1.0.34
      env:
        CARGO_HOME: /root/.cargo
        RUSTUP_HOME: /root/.rustup
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Rust test
        run: ./tools/ci/rust_test

  geth:
    name: Geth Integration Tests
    runs-on: self-hosted
    env:
      GETH_MODE: true
      CI: true
      CHAINLINK_DB_NAME: postgres
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose test
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./tools/docker/logs

  geth-ts:
    name: Geth Typescript-Based Integration tests
    runs-on: self-hosted
    env:
      GETH_MODE: true
      CI: true
      CHAINLINK_DB_NAME: postgres
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose test:ts
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./tools/docker/logs

  parity:
    name: Parity Integration tests
    runs-on: self-hosted
    env:
      CI: true
      CHAINLINK_DB_NAME: postgres
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose test
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./tools/docker/logs

  parity-ts:
    name: Parity Typescript-Based Integration tests
    runs-on: self-hosted
    env:
      CI: true
      CHAINLINK_DB_NAME: postgres
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose test:ts
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./tools/docker/logs

  solidity:
    name: Solidity
    runs-on: self-hosted
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run tests
        run: ./tools/ci/solidity_test
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./integration/logs

  styleguide:
    name: Styleguide
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run styleguide tests
        run: yarn workspace @chainlink/styleguide test

  json-api-client:
    name: JSON API client
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run JSON API client tests
        run: yarn workspace @chainlink/json-api-client test

  operator-ui:
    name: Operator UI
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Operator UI tests
        run: ./tools/ci/operator_ui_test
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./integration/logs

  explorer:
    name: Explorer
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: explorer_test
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    env:
      TYPEORM_NAME: ci-gh
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run setup
        run: yarn workspace @chainlink/explorer setup
      - name: Run Yarn migrations
        run: yarn workspace @chainlink/explorer test:migration:run
      - name: Run Server Tests
        run: yarn workspace @chainlink/explorer test:ci
      - name: Run Client dependency setup
        run: yarn workspace @chainlink/explorer-client setup
      - name: Run Client tests
        run: yarn workspace @chainlink/explorer-client test:ci
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./integration/logs

  feeds:
    name: Feeds
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Feeds setup
        run: yarn workspace @chainlink/feeds setup
      - name: Run Feeds tests
        run: yarn workspace @chainlink/feeds test
        env:
          CI: true

  reportcoverage:
    name: Report test coverage
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    needs: [core, solidity, operator-ui, rust, explorer]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Init GCloud
        run: ./tools/ci/init_gcloud
      - name: Run coverage report
        run: ./tools/ci/report_coverage

  check_if_rebase_needed:
    name: Check if rebase needed
    runs-on: ubuntu-latest
    container: alpine/git
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          # Default fetch depth of 1 prevents us from knowing if HEAD of develop
          # branch is present in current branch
          fetch-depth: 1000
      - name: Check if rebase is needed
        run: tools/bin/check_if_rebase_needed

  lint:
    name: Yarn lint
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Yarn lint
        run: yarn lint

  prepublish_npm:
    name: Prepublish NPM
    runs-on: self-hosted
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run prepublish NPM test
        run: ./tools/ci/prepublish_npm_test

  repo-dispatch-build-publish-explorer:
    name: Kick off build-publish-explorer workflow
    runs-on: ubuntu-latest
    needs:
      - styleguide
      - json-api-client
      - explorer
    steps:
      - name: Issue repository dispatch
        # Pin to v1.0.0
        uses: peter-evans/repository-dispatch@0ae1c4b014bff102f1063cd67a53fc4a91311d1b
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: build-publish-explorer
